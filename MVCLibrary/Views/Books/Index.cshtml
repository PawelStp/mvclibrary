@model MVCLibrary.ViewModels.CartBookViewModel

@{
    ViewBag.Title = "Books";
}

<h2>Ksiązki</h2>

@if (TempData["Status"] != null)
{
    if (TempData["Status"].ToString() == "false" && TempData["Message"] != null)
    {
        <div class="alert alert-danger">
            <strong>Error!</strong>  @TempData["Message"].ToString()
        </div>
    }
    if (TempData["Status"].ToString() == "true" && TempData["Message"] != null)
    {
        <div class="alert alert-success">
            <strong>Success!</strong> @TempData["Message"].ToString()
        </div>
    }
}

<div class="table-responsive">
    @if (Model.cart != null)
    {
        if (Model.cart.books.Count != 0)
        {
            <table class="table">
                <thead>
                    <tr>
                        <th>
                            Tytuł
                        </th>
                        <th>
                            Autor
                        </th>
                        <th>
                            ISBN
                        </th>
                        <th>
                            Status
                        </th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>

                    @foreach (var item in Model.cart.books)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => item.Title)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Author)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.ISBN)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Status)
                            </td>
                            <td>
                                @Html.ActionLink("Usuń", "RemoveBook", new { id = item.Id }, new { @class = "btn btn-danger" })
                            </td>
                        </tr>

                    }
                </tbody>
            </table>
            @Html.ActionLink("Wypożycz ksiązki", "LendBooks", "Books", null, new { @class = "btn btn-success" })
            @Html.ActionLink("Wyczyść koszyk", "ClearCart", "Books", null, new { @class = "btn btn-danger" })
        }
    }
</div>
<hr />

@using (Html.BeginForm("Search", "Books", new { @class = "form - inline" }, FormMethod.Post, new { encype = "multipart /form-data", runat = "server" }))
{
    <input placeholder="Tytuł, Autor, ISBN" type="text" name="value" class="inputs-size-bigger edittext-width" />
        <input type="submit" class="btn btn-success" style="margin: 10px;" value="Szukaj" />
}
@if (Model.SerchWord != null && Request.IsAuthenticated)
{
    @Html.ActionLink("Zapisz historie wyszukiwania", "History", "Books", new { value = Model.SerchWord }, null)
}
<hr />
<table class="table">
    <thead>
        <tr>
            <th>
                Tytuł
            </th>
            <th>
                Autor
            </th>
            <th>
                ISBN
            </th>
            <th>
                Kategoria
            </th>
            <th>
                Status
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.BookViewModels)
            {
            <tr class="form-group">
                @using (Html.BeginForm("Edit", "Books", FormMethod.Post))
                {
                    <td>
                        @Html.DisplayFor(modelItem => item.Title, new { @class = "form-control" })
                    </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Author, new { @class = "form-control" })
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.ISBN, new { @class = "form-control" })
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.NameCategory, new { @class = "form-control" })
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.status, new { @class = "form-control" })
                        </td>
                            <td>
                                @if (Request.IsAuthenticated)
                                {
                                    <a href="@Url.Action("AddBookToCart", "Books", new { id = item.Id })" class="btn btn-success @(item.status == "Wypożyczona" ? "disabled" : "")">
                                        <span class="glyphicon glyphicon-plus" aria-hidden="true"></span> Dodaj do koszyka
                                    </a>

                                    if (User.IsInRole("Admin") || User.IsInRole("Worker"))
                                    {
                                        <a href="@Url.Action("Edit", "Books", new { id = item.Id })" class="btn btn-warning">
                                            <span class="glyphicon glyphicon-pencil" aria-hidden="true"></span> Edytuj
                                        </a>
                                        <a href="@Url.Action("Delete", "Books", new { id = item.Id })" class="btn btn-danger">
                                            <span class="glyphicon glyphicon-remove" aria-hidden="true"></span> Usuń
                                        </a>
                                    }
                                }
                            </td>
                }
            </tr>
        }
    </tbody>
</table>
</div>